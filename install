#GemFire环境配置和安装部署

[TOC]

**login as root**
##环境配置
###用户和组
增加gemfire组和gemfire用户

```Shell
$ sudo groupadd gemfire
$ sudo useradd -g gemfire gemfire
$ sudo passwd gemfire
```
###配置sudo权限
  cd /etc/sudoers.d
  
  vi gemfire_sudo
  
```Shell
          gemfire ALL=(ALL)ALL
```

```Shell
  chmod 400 gemfire_sudo
```

###配置登陆信息
vi /etc/passwd

```Shell
gemfire:x:803:803::/home/gemfire:/bin/bash
```

###设置swappiness
vi /etc/sysctl.conf

```Shell
vm.swappiness=0
vm.overcommit_memory=2
vm.overcommit_ratio=100
net.ipv4.tcp_rmem=10240 131072 33554432
net.ipv4.tcp_wmem=10240 131072 33554432
```
使用sysctl -p使配置生效

###关闭  Transparent Huge Pages (THP) 

vi /etc/grub.conf

```
transparent_hugepage=never
```

###设置句柄数和打开文件数
 vi  /etc/security/limits.conf
 
```Shell
* soft nofile 1048576
* hard nofile 1048576
* soft nproc 1048576
* hard nproc 1048576
```
 vi  /etc/security/limits.d/90-nproc.conf
 
```Shell
* soft nproc 1048576
```
###关闭防火墙

```Shell
service    iptables  stop
chkconfig  iptables  off
```

###设置Hosts
修改 /etc/hosts，把集群中所有节点的ip信息都更新进去


###修改hostname
####redhat
vi /etc/sysconfig/network

```Shell
NETWORKING=yes
HOSTNAME=RH-64-GF-01
```

####suse
vi /etc/HOSTNAME


##安装
###安装JDK
按照具体GemFire版本的要求安装JDK
###安装GemFire
注意版本匹配
注意环境匹配
例如，Gemfire7一般使用jdk7u45安装
在redhat下面使用rpm -ivh 进行安装


##重启

```Shell
 shutdown -r now
```
 

**login as gemfire**
##配置环境变量
vi 配置文件
~/.bash_rc; ~/.bash_profile; /etc/profile

```Shell
#for GemFire7& jdk7
JAVA_HOME=/usr/java/jdk1.7.0_45
PATH=$JAVA_HOME/bin:$PATH
export JAVA_HOME PATH
 
GEMFIRE=/opt/pivotal/gemfire/Pivotal_GemFire_7
GF_JAVA=$JAVA_HOME/bin/java
PATH=$PATH:$GEMFIRE/bin:/home/gemfire/bin
CLASSPATH=$GEMFIRE/lib/*
CLASSPATH=$CLASSPATH:/home/gemfire/lib/*:/home/gemfire/deploy/*
CLASSPATH=$CLASSPATH:$JAVA_HOME/lib/*
export GEMFIRE GF_JAVA PATH CLASSPATH
 
alias cdg="cd /home/gemfire"
alias l="ls -trl"
```


```Shell
#for GemFire8& jdk8
JAVA_HOME=/usr/java/jdk1.8.0_66
PATH=$JAVA_HOME/bin:$PATH
export JAVA_HOME PATH
 
GEMFIRE=/opt/pivotal/gemfire/Pivotal_GemFire_8211
GF_JAVA=$JAVA_HOME/bin/java
PATH=$PATH:$GEMFIRE/bin:/home/gemfire/bin
CLASSPATH=$GEMFIRE/lib/*
CLASSPATH=$CLASSPATH:/home/gemfire/lib/*
CLASSPATH=$CLASSPATH:$JAVA_HOME/lib/*
export GEMFIRE GF_JAVA PATH CLASSPATH
 
alias cdg="cd /home/gemfire"
alias l="ls -trl"
```

##部署
###创建目录
/home/gemfire/
子目录结构如下：

```Shell
backup  
bin  
config
data 
gfsh  
lib  
locator  
server
```
###GemFire集群配置
/home/gemfire/config/gemfire.properties

```Shell
bind-address=182.119.94.178
mcast-port=0
locators=182.119.94.178[30001],182.119.94.180[30003]

cache-xml-file=/home/gemfire/config/cache-server.xml
conserve-sockets=false
enable-network-partition-detection=true

log-level=config
log-disk-space-limit=10000
log-file-size-limit=50

#开启度量抓取
statistic-sampling-enabled=true
#抓取频率，单位为毫秒
statistic-sample-rate=2000
#文件存储路径
statistic-archive-file=statics.gfs
#单个文件大小，单位为M
archive-file-size-limit=100
#全体文件大小，单位为M
archive-disk-space-limit=1000

enable-cluster-configuration=false
use-cluster-configuration=false
```

/home/gemfire/config/locator.properties

```Shell
bind-address=182.119.94.178
mcast-port=0
log-file=/home/gemfire/locator/locator.log
locators=182.119.94.178[30001],182.119.94.180[30003]
enable-network-partition-detection=true
conserve-sockets=false

log-level=config
log-disk-space-limit=10000
log-file-size-limit=50

#开启度量抓取
statistic-sampling-enabled=true
#抓取频率，单位为毫秒
statistic-sample-rate=2000
#文件存储路径
statistic-archive-file=statics.gfs
#单个文件大小，单位为M
archive-file-size-limit=100
#全体文件大小，单位为M
archive-disk-space-limit=1000

enable-cluster-configuration=false
use-cluster-configuration=false
```
 
###配置GemFire 启动脚本
####启动locator脚本
vi /home/gemfire/bin/startlc.sh

```Shell
#!/bin/sh
NAME=`hostname`
gfsh start locator --port=30001 --dir=/home/gemfire/locator --name=locator_${NAME} --J=-Dgemfire.jmx-manager-port=20001 --J=-Xms256m --J=-Xmx256m --J=-Dgemfire.enable-cluster-configuration=false --J=-Dgemfire.use-cluster-configuration=false --include-system-classpath --properties-file=/home/gemfire/config/locator.properties &
``` 
####启动cacheserver脚本
vi /home/gemfire/bin/startServer.sh

```Shell
#!/bin/sh
HOSTNAME=`hostname`
DATE=`date +%Y-%m-%d-%H-%M`
gfsh start server --name=cache_${HOSTNAME} --locators=182.119.94.178[30001],182.119.94.180[30003] --server-port=60001 --include-system-classpath --properties-file=/home/gemfire/config/gemfire.properties --dir=/home/gemfire/server --J=-Xms31g --J=-Xmx31g --J=-Xmn2g --J=-XX:MaxPermSize=256m --J=-XX:PermSize=256m --J=-Xss256k --J=-XX:+UseParNewGC --J=-XX:+UseConcMarkSweepGC --J=-XX:CMSInitiatingOccupancyFraction=70 --J=-XX:+UseCMSInitiatingOccupancyOnly  --J=-XX:+UnlockDiagnosticVMOptions --J=-XX:ParGCCardsPerStrideChunk=32768 --J=-XX:+CMSParallelRemarkEnabled --J=-XX:+ScavengeBeforeFullGC --J=-XX:+CMSScavengeBeforeRemark  --J=-XX:+PrintGCDetails  --J=-XX:+PrintGCDateStamps --J=-XX:+PrintHeapAtGC --J=-XX:+PrintClassHistogram  --J=-XX:+PrintGCApplicationStoppedTime --J=-Xloggc:/gfserver/log/gc_${DATE}.log --J=-Dgemfire.enable-cluster-configuration=false --J=-Dgemfire.use-cluster-configuration=false &
```

开启远程Debug

```Shell
--J=\"-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=50101\"
```

##集群操作
###启动
启动locator
>一个集群至少有2个Locator

启动cacheserver
>有Partition Region的集群， 至少有3个Cacheserver

>没有Partition Region的集群， 至少2个CacheServer

###停止
优先使用gfsh stop和shutdown命令

然后使用kill -2

最后使用 kill -9

##附注
###header of Cache.xml  for GemFire 9
```XML
<?xml version="1.0" encoding="UTF-8"?>
<cache
    xmlns="http://geode.apache.org/schema/cache"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd"
    version="1.0">
...
</cache>
```
```XML
<?xml version="1.0" encoding="UTF-8"?>
<client-cache
    xmlns="http://geode.apache.org/schema/cache"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd"
    version="1.0">
...
</client-cache>
```
